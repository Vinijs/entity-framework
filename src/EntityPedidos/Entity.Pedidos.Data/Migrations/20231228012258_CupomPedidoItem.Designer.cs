// <auto-generated />
using System;
using Entity.Pedidos.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Pedidos.Data.Migrations
{
    [DbContext(typeof(PedidoDbContexto))]
    [Migration("20231228012258_CupomPedidoItem")]
    partial class CupomPedidoItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.CupomDesconto", b =>
                {
                    b.Property<int>("CupomDescontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Aplicado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("AplicadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CodigoCupom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("PercentualDesconto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoCupomDesconto")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorDesconto")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("CupomDescontoId");

                    b.ToTable("cupom_desconto");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numero");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("enderecos", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<int?>("CupomDescontoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("endereco_id");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double")
                        .HasColumnName("valor_total");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CupomDescontoId");

                    b.HasIndex(new[] { "ClienteId" }, "IX_pedidos_cliente_id");

                    b.HasIndex(new[] { "EnderecoId" }, "IX_pedidos_endereco_id");

                    b.ToTable("pedidos", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.PedidoItem", b =>
                {
                    b.Property<int>("PedidoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PedidoItemId");

                    b.HasIndex("PedidoId");

                    b.ToTable("pedido_item");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Pedido", b =>
                {
                    b.HasOne("Entity.Pedidos.Domain.Entidades.CupomDesconto", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("CupomDescontoId");

                    b.HasOne("Entity.Pedidos.Domain.Entidades.Endereco", "Endereco")
                        .WithMany("Pedidos")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.PedidoItem", b =>
                {
                    b.HasOne("Entity.Pedidos.Domain.Entidades.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.CupomDesconto", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Endereco", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
